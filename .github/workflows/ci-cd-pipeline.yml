# Define variables to be used throughout the pipeline
variables:
  DOCKER_DRIVER: overlay

# Define the different stages for the pipeline
stages:
  - build
  - deploy

# Define the maven build job, which compiles the code
maven-build-job:
  image: maven:latest
  stage: build
  tags : [build]
  script:
    - echo "Compiling the project ..." # Print out a message indicating that the code is being compiled
    - mvn package # Run the Maven package command to build the jar
  artifacts:
    paths:
      - target/*.jar # Define the artifact to be produced by the build job

# Define the deploy job, which deploys the application to GitLab
deploy-job:
  image: docker:latest
  stage: deploy
  tags : [deploy]
  services:
    - name: docker:dind
  script:
    - echo "Deploying ..." # Print out a message indicating that the application is being deployed
    - docker build -t registry.gitlab.com/adnanedrief/gitlab-ci-rest-api-springboot . -f Dockerfile # Build the Docker image using the Dockerfile in the current directory
    - echo "Login to gitlab..." # Print out a message indicating that the deployment is logging in to GitLab
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com # Log in to GitLab using the CI_BUILD_TOKEN
    - echo "Pushing to gitlab..." # Print out a message indicating that the Docker image is being pushed to GitLab
    - docker push registry.gitlab.com/adnanedrief/gitlab-ci-rest-api-springboot # Push the Docker image to GitLab
    - echo "Application successfully deployed." # Print out a message indicating that the application has been successfully deployed
    
